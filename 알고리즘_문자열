#1764
#내가 쓴 풀이

n,m = map(int,input().split())
n_list = []
m_list = []
name_list = []
for i in range(n):
    n_list.append(input())

for j in range(m):
    m_list.append(input())
 

for k in range(n):
    for x in range(m):
        if n_list[k] == m_list[x]:
            break

    else:
        name_list.append(n_list[k])    
    
print(len(name_list))
    
for a in name_list:
    print(a)

#해답

n,m = map(int,input().split())
n_set = set()
m_set = set()  
for i in range(n):
    n_set.add(input())

for j in range(m):
    m_set.add(input())
name_set = n_set & m_set                      
    
print(len(name_set))
    
for a in sorted(name_set):
    print(a) 

#list 보단 set 을 쓰면 교집합을 쉽게 구할수 있다
#set는 중복을 허용하지 않는다(자동으로 중복이 되지않도록 설정해준다)
#set는 add를 사용하고 list는 append 를 사용한다



#2675
#내가 쓴 풀이(틀림)

t = int(input())
for _ in range(t):
    r,s = input().split()
    r = int(r)
    for i in range(s):
        s[i] *=r                   
        
    print(s)

#해답

t = int(input())
for _ in range(t):
    r,s = input().split()
    r = int(r)
    result = ''
    for i in range(len(s)):
        result += s[i]*r
        
    print(result)

#주의할점
#1. 문자열 s는 range(s)로 사용할수 없다. range(len(s))가 되어야함
#2. 문자열 s의 인덱스에 직접 접근하여 s를 변경할수 없다. s를 변화시킨 값을 의미할 새로운 변수를 만들어야함




#9012
#내가 쓴 풀이(맞음)

t = int(input())

for _ in range(t):
    case = input()
    count = 0
    for i in range(len(case)):
        if case[i] == '(':
            count += 1
        elif case[i] == ')':
            count-=1
           
        if count <0:
            print('NO')
            break
        
    else:
        if count>0:
            print('NO')
        else:
            print('YES')


#10773
#내가 쓴 풀이(맞음)

import sys
input = sys.stdin.readline


k = int(input())
num_list = []
for i in range(k):
    num = int(input())
    if num !=0:
        num_list.append(num)
    else:
        num_list.pop()
        
sum = 0
for j in num_list:
    sum += j

print(sum)

#4949
#내가 쓴 풀이(틀림)

    sen_list = list(input())
    a=0
    b=0
    count = 0
    for i in sen_list:
        if i == '[':
            a+=1
        elif i == ']':
            a-=1
        elif i == '(':
            b+=1
        elif i == ')':
            b-=1
            
        if a<0:         
            count+=1
            break
        if b<0:           
            count+=1
            break
            
    if a>0:
        count+=1
    if b>0:
        count+=1



#해답

while True:
    word=input()

    stack=[] 
    if word=='.':
        break

    for w in word:
        if w=='(' or w=='[':
            stack.append(w)
        elif w==')':
            if stack and stack[-1]=='(':                   # if stack[-1] == '('만 적으면 stack이 비어있을경우 indexError이 나게 된다. 따라서 먼저 stack이 비어있지 않은지 부터 확인해주어야 한다.
                stack.pop()
            else:
                stack.append(w)
                break
        elif w==']':
            if stack and stack[-1]=='[':             
                stack.pop()
            else:
                stack.append(w)
                break

    if len(stack)==0:
        print('yes')
    else:
        print('no')


# 문장에서 필요한 문자인 괄호만 스택에 추가하고 제거하면서 괄호의 상태만 골라내어 판단할수있다.
# 괄호문제는 결국 가장 안쪽에 있는 괄호부터 시작해서 여닫이가 마무리 되는지만 확인하면됨


#2504
#해답
sen_list = list(input())

stack = []
answer = 0
tmp = 1

for i in range(len(sen_list)):

    if bracket[i] == "(":
        stack.append(sen_list[i])
        tmp *= 2

    elif bracket[i] == "[":
        stack.append(sen_list[i])
        tmp *= 3

    elif sen_list[i] == ")":
        if not stack or stack[-1] == "[":
            answer = 0
            break
        if sen_list[i-1] == "(":
            answer += tmp
        stack.pop()
        tmp //= 2

    else:
        if not stack or stack[-1] == "(":
            answer = 0
            break
        if sen_list[i-1] == "[":
            answer += tmp

        stack.pop()
        tmp //= 3

if stack:
    print(0)
else:
    print(answer)

# 조건문이 많은 문제는 어디다가 정리를 좀 해두자
# 괄호문제는 스택 이용하기
# 경우의수 차근차근 정리해보기

#1181
#내가 쓴 풀이

n = int(input())
wordlist = []
for i in range(n):
    word = input()
    wordlist.append(word)
print(wordlist)
wordset = set(wordlist)
print(wordset)
wordset.sort(key= lambda x:(len(x),x[0]))

for i in wordset:
    print(i)

#해답

n = int(input())
wordlist = []
for i in range(n):
    word = input()
    wordlist.append(word)
wordlist = list(set(wordlist))

wordlist.sort(key= lambda x:(len(x),x))       #x[0]이라 하지않고 x라고만 해도 사전순으로 정렬해준다.

for i in wordlist:
    print(i)

# set는 변경가능한 객체가 아니다. 다시 list로 바꿔준후 list를 정렬시켜야 한다.











